---
- hosts: all

  vars:
    
    applications:
      - namechanger
      - flux
      - cord
      - google-chrome
      - firefox
      - transmit
      - dropbox
      - keka
      - shuttle
      - transmission
      - alfred
      - betterzipql
      - bettertouchtool
      - anvil
      - adium
      - alfred
      - apptrap
      - appzapper
      - bodega
      - cyberduck
      - evernote
      - google-drive
      - keyremap4macbook
      - caffeine
      - nosleep
      - qlstephen
      - skitch
      - dash
      - cheatsheet
      - deeper
      - disk-inventory-x
      - google-drive
      - handbrake
      - imageoptim
      - iterm2
      - monolingual
      - mactracker
      - onyx
      - quicksilver
      - skype
      - virtualbox
      - qlcolorcode
      - qlimagesize
      - qlmarkdown
      - rcdefaultapp
      - vlc
      - sequel-pro
      - subtitles
      - shuttle
      - shortcat 
      - xtrafinder
    
    zsh_path: /usr/local/bin/zsh

    home: "{{ lookup('env','HOME') }}"

    install_oh_my_zsh:  false

    install_prezto: true

  tasks:

    - name: Check Homebrew is installed
      stat: path=/usr/local/bin/brew
      register: brew_installed

    - name: Install Homebrew
      shell: ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)"
      when: brew_installed.stat.exists == false

    - name: Tap homebrew/dupes
      shell: brew tap homebrew/dupes

    - name: Tap homebrew/binary
      shell: brew tap homebrew/binary

    - name: Check homebrew-cask is installed
      stat: path=/usr/local/bin/brew-cask.rb
      register: brew_cask_installed

    - name: Install homebrew-cask
      shell: brew tap phinze/cask && brew install brew-cask
      when: brew_cask_installed.stat.exists == false

    - name: Install libraries and apps with homebrew
      homebrew: name={{ item }} state=present
      with_items:
        - wget
        - apple-gcc42
        - vim
        - ack
        - git
        - tmux
        - zsh
        - hub
        - rsync
        - vagrant
        - packer

    - name: Check for installed apps(casks)
      shell: brew cask list | grep {{ item }}
      register: installed_applications
      with_items: applications
      ignore_errors: true
 
    - name: Install apps with brew-cask
      shell: brew cask install {{ item }}
      with_items: applications
      when: "{{ item not in installed_applications.results|map(attribute='stdout') }}"
  
    - name: Determine if zsh is default/current shell
      shell: echo $SHELL
      register: current_shell

    - name: Enable zsh in /etc/shells
      shell: sudo /bin/sh -c 'grep -q "{{ zsh_path }}" /etc/shells || echo "{{ zsh_path }}" >> /etc/shells'
      when: current_shell.stdout != '/usr/local/bin/zsh'

    - name: Set zsh as default shell
      shell: chsh -s {{ zsh_path }}
      when: current_shell.stdout != '/usr/local/bin/zsh'

    - name: Check rcm is installed
      stat: path=/usr/local/bin/rcup
      register: rcm_installed

    - name: Install rcm for dotfiles management
      shell: brew tap thoughtbot/formulae && brew install rcm
      when: rcm_installed.stat.exists == false

    #- name: Start services at login
    #  file: src=/usr/local/opt/{{ item }}/homebrew.mxcl.{{ item }}.plist path=~/Library/LaunchAgents/homebrew.mxcl.{{ item }}.plist state=link force=yes
    #  with_items: 
    #    - mysql
    #    - elasticsearch
 
    #- name: Setup launch agents for services
    #  command: launchctl load {{ home }}/Library/LaunchAgents/homebrew.mxcl.{{ item }}.plist
    #  with_items:
    #    - mysql
    #    - elasticsearch
    #

    - name: Clone dotfiles
      # I set force and update to no so that if I have any working changes or changes that I haven't pushed up it doesn't reset my local history.
      git: repo=git@github.com:eduardodeoh/{{ item }}.git dest={{ home }}/{{ item }} force=no update=no
      with_items:
        - dotfiles

    - name: Install oh-my-zsh
      shell: "{{ home }}/dotfiles/zsh/oh-my-zsh/bootstrap-oh-my-zsh.sh"
      when: install_oh_my_zsh == true
      tags: install_oh_my_zsh

    - name: Install Prezto (zsh)
      shell: "{{ home }}/dotfiles/zsh/prezto/bootstrap-prezto.sh"
      when: install_prezto == true
      tags: install_prezto
